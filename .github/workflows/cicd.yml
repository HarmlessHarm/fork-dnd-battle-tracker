name: CI/CD

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  testbuild:
    name: Test and Build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: '14.x'
    - name: Install Dependencies
      run: npm ci
    - name: Run Unit Tests
      run: npm run test:ci
    - name: Run Linter
      run: npm run lint
    - name: Run Size Tests
      run: npm run size
    - name: Run Build
      run: npm run build
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
    - name: Run E2E Tests
      run: npx playwright test
    - name: Upload E2E Test Results
      uses: actions/upload-artifact@v2
      if: always()
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30
    - name: Upload Build Artefact
      uses: actions/upload-artifact@v2
      if: always()
      with:
        name: dnd-battle-tracker.html
        path: dist/dnd-battle-tracker.html
        retention-days: 30

  deploystage:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    environment:
      name: staging
      url: https://dndbattletracker.com/stage/
    concurrency:
      group: staging
      cancel-in-progress: true
    needs: testbuild
    if: github.event_name == 'push'
    steps:
      - name: Download Build Artefact
        uses: actions/download-artifact@v3
        with:
          name: dnd-battle-tracker.html
      - name: Display structure of downloaded files
        run: ls -R

  deployprod:
    name: Deploy to Production
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://dndbattletracker.com/
    concurrency:
      group: production
      cancel-in-progress: true
    needs: staging
    if: github.event_name == 'push'
    steps:
      - name: Check if version has been updated
        id: versioncheck
        uses: EndBug/version-check@v1
        with:
          diff-search: true
      - name: Log when version unchanged
        if: steps.check.outputs.changed == 'false'
        run: 'echo "No version change, skipping Deploy to Production"'
      - name: Log when version changed
        if: steps.check.outputs.changed == 'true'
        run: 'echo "Version change found in commit ${{ steps.check.outputs.commit }}! New version: ${{ steps.check.outputs.version }} (${{ steps.check.outputs.type }})"'
      - name: Download Build Artefact
        if: steps.check.outputs.changed == 'true'
        uses: actions/download-artifact@v3
        with:
          name: dnd-battle-tracker.html
      - name: Display structure of downloaded files
        if: steps.check.outputs.changed == 'true'
        run: ls -R
